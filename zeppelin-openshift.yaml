apiVersion: v1
kind: Template
metadata:
  name: apache-zeppelin-openshift
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: The name of the Zeppelin Application
    from: zeppelin-[a-z0-9]{4}
    generate: expression
  - name: GIT_URI
    displayName: Git Repository URL
    description: The URL of the repository with your application source code
    required: true
  - name: ZEPPELIN_INTERPRETERS
    displayName: Zeppelin Interpreters
    description: The name of the Zeppelin interpreters that must be installed in the distribution, separated by commas
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 42000
            protocol: TCP
          - containerPort: 42100
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-headless
  spec:
    clusterIP: None
    ports:
      - name: driver-rpc-port
        port: 7078
        protocol: TCP
        targetPort: 7078
      - name: blockmanager
        port: 7079
        protocol: TCP
        targetPort: 7079
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    source:
      git:
        uri: ${GIT_URI}
    strategy:
      sourceStrategy:
        env:
        - name: ZEPPELIN_INTERPRETERS
          value: ${ZEPPELIN_INTERPRETERS}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: zeppelin-openshift:latest
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial

    triggers:
    - github:
        secret: null
        type: GitHub
    - generic:
        secret: null
        type: Generic
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION_NAME}
    name: zeppelin-openshift
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: rimolive/zeppelin-openshift
      generation: 1
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source